{"version":3,"sources":["Pages/Login/Login.module.css","Common/Test/c1-SuperInputText/SuperInputText.module.css","Common/Test/c3-SuperCheckbox/SuperCheckbox.module.css","Common/Test/c2-SuperButton/SuperButton.module.css","Pages/Registration/Registration.module.css","Pages/NavBar/Navbar.module.css","Pages/Login/Login.tsx","Pages/Registration/Registration.tsx","Pages/PasswordRecovery/PasswordRecovery.tsx","Pages/EnteringNewPassword/NewPassword.tsx","Images/1548761996_2019-01-29_141751.jpg","Common/Error/GlobalError.tsx","Common/Test/c1-SuperInputText/SuperInputText.tsx","Common/Test/c3-SuperCheckbox/SuperCheckbox.tsx","Common/Test/c2-SuperButton/SuperButton.tsx","Common/Test/Test.tsx","Pages/NavBar/NavBar.tsx","Pages/Profile/Profile.tsx","App.tsx","reportWebVitals.ts","Store/Reducers/LoginReducer.ts","Store/Reducers/RegistrationReducer.ts","Store/Reducers/ProfileReducer.ts","Store/Store.ts","index.tsx"],"names":["module","exports","Login","status","useSelector","state","login","isLoggedIn","useState","email","password","rememberMe","error","setError","to","className","style","title","onChange","e","currentTarget","value","type","name","event","checked","href","button","onClick","length","Registration","props","confirmPassword","formData","invalidPassword","setInvalidPassword","console","log","PasswordRecovery","NewPassword","GlobalError","src","errorPhoto","alt","SuperInputText","onChangeText","onKeyPress","onEnter","inputClassName","restProps","finalSpanClassName","s","finalInputClassName","inputStandart","errorInput","key","SuperCheckbox","onChangeChecked","children","spanClassName","checkBox","SuperButton","red","finalClassName","default","Test","NavBar","nav","item","activeClassName","active","setting","Profile","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","registration","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.505c7d4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__CPF7V\",\"error\":\"Login_error__1Jo_c\",\"button\":\"Login_button__1CpYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2B4f0\",\"inputOK\":\"SuperInputText_inputOK__Qfkn2\",\"errorInput\":\"SuperInputText_errorInput__GLTLB\",\"inputStandart\":\"SuperInputText_inputStandart__279y_\",\"error\":\"SuperInputText_error__1GQSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBox\":\"SuperCheckbox_checkBox__2Y3MZ\",\"spanClassName\":\"SuperCheckbox_spanClassName__2GOAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3EVIR\",\"red\":\"SuperButton_red__k3iYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Registration_error__3sQA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3TzPS\",\"item\":\"Navbar_item__3Qb4y\",\"active\":\"Navbar_active__VYDWc\",\"setting\":\"Navbar_setting__13MJJ\"};","import React, {ChangeEvent, useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppRootStateType } from '../../Store/Store';\r\nimport style from './Login.module.css'\r\n\r\n\r\ntype LoginParamsType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n    const status = useSelector<AppRootStateType, boolean>(state=>state.login.isLoggedIn)\r\n    let [login, setLogin] = useState<LoginParamsType>({\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false\r\n    })\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const onSubmit = () => {\r\n        if (login.email !== '' && login.email.length > 7\r\n            && login.password !== '' && login.password.length > 7) {\r\n            setError('')\r\n        } else {\r\n            setError('Incorrect username or passwords')\r\n        }\r\n    }\r\n\r\n    const handleChangeEmail = (e: ChangeEvent<HTMLInputElement>) => login.email = e.currentTarget.value\r\n    const handleChangePassword = (event: ChangeEvent<HTMLInputElement>) =>  login.password = event.currentTarget.value\r\n    const handleChangeRememberMe = (event: ChangeEvent<HTMLInputElement>) =>  login.rememberMe = event.currentTarget.checked\r\n    if(status) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={style.login} >\r\n            <div className={style.title}>\r\n                <h1>Welcome to site</h1>\r\n                <h3>Sign In</h3>\r\n            </div>\r\n            <div>\r\n                <label>Email:</label> <input onChange={handleChangeEmail}  title={'enter email'} type=\"email\" name={'email'}/>\r\n            </div>\r\n            <div>\r\n                <label>Password:</label> <input onChange={handleChangePassword} title={'enter password'} type=\"password\" name={'password'}/>\r\n            </div>\r\n            <div className={style.error} >{error !== '' && error}</div>\r\n            <div>\r\n                <label>Remember me</label><input type=\"checkbox\" onChange={handleChangeRememberMe} name={'rememberMe'}/>\r\n            </div>\r\n            <div>\r\n                <a href=\"#/login\"  title={'Forgot your password?'}>Forgot Password</a>\r\n            </div>\r\n            <div>\r\n                <button className={style.button} onClick={onSubmit}> Sign In</button>\r\n            </div>\r\n            <div>\r\n                <a href=\"#/registration\" title={\"Don't have an account?\"}>Register</a>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import React, { ChangeEvent, useState } from 'react';\r\nimport style from './Registration.module.css'\r\n\r\n\r\ntype RegistrationFormType = {\r\n    email: string\r\n    password: string\r\n    confirmPassword: string\r\n}\r\n\r\nexport type RegistrationType = {}\r\nexport const Registration = (props: RegistrationType) => {\r\n    const errMessage = 'Do not coincide with passwords'\r\n    let [formData, setFormData] = useState<RegistrationFormType>({\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n    const [invalidPassword, setInvalidPassword] = useState<string>('')\r\n\r\n    const onSubmit = () => {\r\n        if (formData.password === formData.confirmPassword) {\r\n            console.log(formData)\r\n            setInvalidPassword('')\r\n        } else {\r\n            setInvalidPassword(errMessage)\r\n        }\r\n    }\r\n\r\n    const handleChangeEmail = (e: ChangeEvent<HTMLInputElement>) => formData.email = e.currentTarget.value\r\n    const handleChangePassword = (event: ChangeEvent<HTMLInputElement>) =>  formData.password = event.currentTarget.value\r\n    const handleConfirmPassword = (event: ChangeEvent<HTMLInputElement>) =>  formData.confirmPassword = event.currentTarget.value\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label>Email: </label> <input onChange={handleChangeEmail} name={'email'} type=\"email\"/>\r\n            </div>\r\n            <div>\r\n                <label>Password: </label> <input onChange={handleChangePassword} name={'Password'} type={'password'}/>\r\n            </div>\r\n            <div>\r\n                <label>Confirm password:</label> <input onChange={handleConfirmPassword} name={'Confirm'}\r\n                                                       type={'password'}/>\r\n                <div className={style.error}>{invalidPassword !== '' && invalidPassword}</div>\r\n            </div>\r\n            <div>\r\n                <button onClick={onSubmit}>REGISTRATION</button>\r\n                <button>CANCEL</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport const PasswordRecovery = () => {\r\n  return (\r\n    <div> Login </div>\r\n  );\r\n}","import React from 'react';\r\n\r\n\r\nexport const NewPassword = () => {\r\n  return (\r\n    <div> Login </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/1548761996_2019-01-29_141751.e49107d4.jpg\";","import React from 'react';\r\nimport errorPhoto from '../../Images/1548761996_2019-01-29_141751.jpg'\r\n\r\n\r\nexport const GlobalError = () => {\r\n  return (\r\n    <div>\r\n      <img src={errorPhoto} alt=\"error\"/>\r\n    </div>\r\n  );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    inputClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, inputClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${'' ? '' : ''}`\r\n    const finalInputClassName = ` ${s.inputStandart} ${error  ?  s.errorInput : inputClassName} ` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeChecked) {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkBox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >HI</button>\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react';\r\nimport SuperInputText from './c1-SuperInputText/SuperInputText';\r\nimport SuperCheckbox from './c3-SuperCheckbox/SuperCheckbox';\r\nimport SuperButton from './c2-SuperButton/SuperButton';\r\n\r\nconst Test = () => {\r\n    return (\r\n        <div>\r\n            <SuperInputText/>\r\n            <SuperCheckbox/>\r\n            <SuperButton />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div>\r\n            <nav className={s.nav}>\r\n                <div className={`${s.item}`}><NavLink  activeClassName={s.active} to={'/entrynewpassword'}>Entrynewpassword</NavLink></div>\r\n                <div className={s.item}><NavLink  activeClassName={s.active} to={'/test'}>test</NavLink></div>\r\n                <div className={s.item + ' ' + s.setting}><NavLink  activeClassName={s.active} to={'/profile'}>Profile</NavLink></div>\r\n                <div className={s.item + ' ' + s.setting}><NavLink  activeClassName={s.active} to={'/registration'}>Registration</NavLink></div>\r\n                <div className={s.item + ' ' + s.setting}><NavLink  activeClassName={s.active} to={'/login'}>Login</NavLink></div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\n\r\nexport const Profile = () => {\r\n  return (\r\n    <div> Profile </div>\r\n  );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Login } from './Pages/Login/Login';\r\nimport { Registration } from './Pages/Registration/Registration';\r\nimport { PasswordRecovery } from './Pages/PasswordRecovery/PasswordRecovery';\r\nimport { NewPassword } from './Pages/EnteringNewPassword/NewPassword';\r\nimport { GlobalError } from './Common/Error/GlobalError';\r\nimport Test from './Common/Test/Test';\r\nimport NavBar from './Pages/NavBar/NavBar';\r\nimport { Profile } from './Pages/Profile/Profile';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <NavBar/>\r\n      <Switch>\r\n        <Route path={'/login'} render={() => <Login/>} />\r\n        <Route path={'/registration'} render={() => <Registration/>}/>\r\n        <Route path={'/profile'} render={() => <Profile/>}/>\r\n        <Route path={'/404'} render={() => <GlobalError/>}/>\r\n        <Route path={'/recoverypassword'} render={() => <PasswordRecovery/>}/>\r\n        <Route path={'/entrynewpassword'} render={() => <NewPassword/>}/>\r\n        <Route path={'/test'} render={() => <Test/>}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n//test\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n    isLoggedIn: false\r\n}\r\ntype initialState = typeof initialState\r\nexport const loginReducer = (state:initialState = initialState, action: ActionsType): initialState => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.status}\r\n        default:\r\n            return state\r\n    }\r\n    return state\r\n};\r\n\r\n//actions\r\nexport const setIsLoggedInAC = (status: boolean) => {\r\n    return {\r\n        type: 'login/SET-IS-LOGGED-IN',\r\n        status\r\n    } as const\r\n}\r\n//type\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC>","\r\n\r\nconst initialState = { }\r\n\r\n\r\nexport const registrationReducer = (state = initialState, action: any):any => {\r\n    return state\r\n};\r\n","\r\n\r\nconst initialState = { }\r\nexport const profileReducer = (state = initialState, action: any):any => {\r\n    return state\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport {loginReducer} from './Reducers/LoginReducer'\r\nimport {registrationReducer} from './Reducers/RegistrationReducer'\r\nimport {profileReducer} from './Reducers/ProfileReducer'\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\nexport type ActionType = {}\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n// определить автоматически тип всего объекта состояния\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n//export type AppDispatchType = Dispatch<ActionType>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './Store/Store';\r\n//1dfsfsd\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}